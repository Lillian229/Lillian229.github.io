(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{422:function(v,t,a){"use strict";a.r(t);var _=a(34),e=Object(_.a)({},(function(){var v=this,t=v.$createElement,a=v._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"计算机基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机基础"}},[v._v("#")]),v._v(" 计算机基础")]),v._v(" "),a("h2",{attrs:{id:"编程语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程语言"}},[v._v("#")]),v._v(" 编程语言")]),v._v(" "),a("ul",[a("li",[v._v("编程语言：可以通过类似于人类语言的 ”语言”来控制计算机，让计算机为我们做事情，这样的语言就叫做编程语言（Programming Language）。")]),v._v(" "),a("li",[v._v("编程语言是用来控制计算机的一系列指令，它有固定的格式和词汇（不同编程语言的格式和词汇不一样），必须遵守。")]),v._v(" "),a("li",[v._v("如今通用的编程语言有两种形式："),a("strong",[v._v("汇编语言和高级语言")]),v._v("。")])]),v._v(" "),a("table",[a("thead",[a("tr",[a("th",[v._v("语言类型")]),v._v(" "),a("th",{staticStyle:{"text-align":"left"}},[v._v("说明")])])]),v._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[v._v("汇编语言")])]),v._v(" "),a("td",{staticStyle:{"text-align":"left"}},[v._v("汇编语言和机器语言实质是相同的，都是直接对硬件操作，"),a("br"),v._v("只不过指令采用了英文缩写的标识符，容易识别和记忆。")])]),v._v(" "),a("tr",[a("td",[a("strong",[v._v("高级语言")])]),v._v(" "),a("td",{staticStyle:{"text-align":"left"}},[v._v("高级语言主要是相对于低级语言而言，它并不是特指某一种具体的语言，"),a("br"),v._v("而是包括了很多编程语言，常用的有C语言、C++、Java、C#、Python、PHP、"),a("br"),v._v("JavaScript、Go语言、Objective-C、Swift等。")])])])]),v._v(" "),a("h2",{attrs:{id:"翻译器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#翻译器"}},[v._v("#")]),v._v(" 翻译器")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("高级语言所编制的程序不能直接被计算机识别，必须经过转换才能被执行，为此，需要一个翻译器。")])]),v._v(" "),a("li",[a("p",[v._v("翻译器可以将我们所编写的源代码转换为机器语言，这也被称为二进制化。 1和 0。")])]),v._v(" "),a("li",[a("p",[v._v("编程语言(JS、Java、c++、Python...) -> 翻译器 -> 机器语言(二进制0101010101...)")])])]),v._v(" "),a("h2",{attrs:{id:"编程语言和标记语言区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程语言和标记语言区别"}},[v._v("#")]),v._v(" 编程语言和标记语言区别")]),v._v(" "),a("table",[a("thead",[a("tr",[a("th",[v._v("语言")]),v._v(" "),a("th",[v._v("说明")])])]),v._v(" "),a("tbody",[a("tr",[a("td",[v._v("编程语言")]),v._v(" "),a("td",[v._v("编程语言有很强的逻辑和行为能力。在编程语言里, 可以看到很多"),a("br"),v._v(" if else 、for 、while等具有逻辑性和行为能力的指令，这是主动的。")])]),v._v(" "),a("tr",[a("td",[v._v("标记语言")]),v._v(" "),a("td",[v._v("标记语言（html）不用于向计算机发出指令，常用于格式化和链接。"),a("br"),v._v("标记语言的存在是用来被读取的, 是被动的。")])])])]),v._v(" "),a("h2",{attrs:{id:"解释型语言和编译型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解释型语言和编译型语言"}},[v._v("#")]),v._v(" 解释型语言和编译型语言")]),v._v(" "),a("p",[v._v("计算机不能直接理解任何除机器语言以外的语言，所以必须要把程序员所写的程序语言翻译成机器语言才能执行程序。程序语言翻译成机器语言的工具，被称为翻译器。")]),v._v(" "),a("p",[v._v("编程语言(JS、Java、c++、Python...) -> 翻译器 -> 机器语言(二进制0101010101...)")]),v._v(" "),a("ul",[a("li",[v._v("翻译器翻译的方式有两种：一个是编译，另外一个是解释。两种方式之间的区别在于翻译的时间点不同")]),v._v(" "),a("li",[v._v("编译器是在代码执行之前进行编译，"),a("strong",[v._v("生成中间代码文件")])]),v._v(" "),a("li",[v._v("解释器是在运行时进行及时解释，并"),a("strong",[v._v("立即执行")]),v._v("(当编译器以解释方式运行的时候，也称之为解释器)")])]),v._v(" "),a("p",[v._v("类似于请客吃饭：")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("编译语言：首先把所有菜做好，才能上桌吃饭")])]),v._v(" "),a("li",[a("p",[v._v("解释语言：好比吃火锅，边吃边涮，同时进行")])])]),v._v(" "),a("h2",{attrs:{id:"计算机组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机组成"}},[v._v("#")]),v._v(" 计算机组成")]),v._v(" "),a("p",[a("img",{attrs:{src:"https://hcx-blog-images.oss-cn-chengdu.aliyuncs.com/images/20-4.png",alt:""}})]),v._v(" "),a("p",[a("img",{attrs:{src:"https://hcx-blog-images.oss-cn-chengdu.aliyuncs.com/images/20-5.png",alt:""}})]),v._v(" "),a("h2",{attrs:{id:"数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据存储"}},[v._v("#")]),v._v(" 数据存储")]),v._v(" "),a("ol",[a("li",[v._v("计算机内部使用二进制 0 和 1来表示数据。")]),v._v(" "),a("li",[v._v("所有数据，包括文件、图片等最终都是以二进制数据（0 和 1）的形式存放在硬盘中的。")]),v._v(" "),a("li",[v._v("所有程序，包括操作系统，本质都是各种数据，也以二进制数据的形式存放在硬盘中。平时我们所说的安装软件，其实就是把程序文件复制到硬盘中。")]),v._v(" "),a("li",[v._v("硬盘、内存都是保存的二进制数据。")])]),v._v(" "),a("h2",{attrs:{id:"数据存储单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据存储单位"}},[v._v("#")]),v._v(" 数据存储单位")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("大小关系：bit < byte < kb < GB < TB<.....\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("ul",[a("li",[v._v("位(bit)：   1bit 可以保存一个 0 或者 1 （最小的存储单位）")]),v._v(" "),a("li",[v._v("字节(Byte)：1B = 8b")]),v._v(" "),a("li",[v._v("千字节(KB)：1KB = 1024B")]),v._v(" "),a("li",[v._v("兆字节(MB)：1MB = 1024KB")]),v._v(" "),a("li",[v._v("吉字节(GB):  1GB = 1024MB")]),v._v(" "),a("li",[v._v("太字节(TB):  1TB = 1024GB")])]),v._v(" "),a("h2",{attrs:{id:"程序运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序运行"}},[v._v("#")]),v._v(" 程序运行")]),v._v(" "),a("p",[v._v("硬盘 -> 内存条 -> cpu")]),v._v(" "),a("p",[v._v("计算机运行软件的过程：")]),v._v(" "),a("ol",[a("li",[a("p",[v._v("打开某个程序时，先从硬盘中把程序的代码加载到内存中")])]),v._v(" "),a("li",[a("p",[v._v("CPU执行内存中的代码")]),v._v(" "),a("p",[v._v("注意：之所以要内存的一个重要原因，是因为 cpu运行太快了，如果只从硬盘中读数据，会浪费cpu性能，所以，才使用存取速度更快的内存来保存运行时的数据。（内存是电，硬盘是机械）")])])]),v._v(" "),a("h2",{attrs:{id:"浅谈前端发展史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浅谈前端发展史"}},[v._v("#")]),v._v(" 浅谈前端发展史")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("第一阶段：C/S （client server） -> B / S （browser server）网页制作\n技术栈：PhotoShop、HTML、CSS")])]),v._v(" "),a("li",[a("p",[v._v("第二阶段：从静态到动态，从后端到前端 前端开发工程师\n前后端分离：\n后端：完成数据的分析和业务逻辑的编写（包含API接口编写）\n前端：网页制作、JS交互效果、数据的交互和绑定\n技术栈：JavaScript 、 Ajax（跨域技术）、jQuery ...")])]),v._v(" "),a("li",[a("p",[v._v("第三阶段：从前端到全端（从PC端到移动端）\n技术栈：H5、CSS3、响应式布局开发，Zepto、Hybrid（混合app开发）微信小程序...")])]),v._v(" "),a("li",[a("p",[v._v("第四阶段：从全端到全栈\n全栈开发：前后端都可以开发（严格意义讲，一种语言完成前段后开发）\n技术栈：NODE（基于js编程语言开发服务器端程序）、Express/Koa...")])])]),v._v(" "),a("h2",{attrs:{id:"什么是服务器-本地启动node服务-服务器和浏览器关系-服务器作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是服务器-本地启动node服务-服务器和浏览器关系-服务器作用"}},[v._v("#")]),v._v(" 什么是服务器, 本地启动node服务, 服务器和浏览器关系, 服务器作用")]),v._v(" "),a("p",[v._v("服务器是一台性能高, 24小时可以开机的电脑")]),v._v(" "),a("p",[v._v("服务器可以提供服务(例如: 文件存储, 网页浏览, 资源返回)")]),v._v(" "),a("p",[v._v("在window电脑里安装node后, 可以编写代码用node 启动一个web服务, 来读取本html文件, 返回给浏览器查看")]),v._v(" "),a("p",[v._v("浏览器 -> 请求资源 -> 服务器")]),v._v(" "),a("p",[v._v("浏览器 <-  响应数据 <- 服务器")]),v._v(" "),a("h2",{attrs:{id:"开发环境和生产环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发环境和生产环境"}},[v._v("#")]),v._v(" 开发环境和生产环境")]),v._v(" "),a("p",[v._v("development, production")]),v._v(" "),a("h2",{attrs:{id:"初始化包环境和package-json文件作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化包环境和package-json文件作用"}},[v._v("#")]),v._v(" 初始化包环境和package.json文件作用")]),v._v(" "),a("p",[v._v("npm下载的包和对应版本号, 都会记录到下载包时终端所在文件夹下的package.json文件里")]),v._v(" "),a("h2",{attrs:{id:"package-json中的dependencies和-devdependencies区别和作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json中的dependencies和-devdependencies区别和作用"}},[v._v("#")]),v._v(" package.json中的dependencies和 devDependencies区别和作用")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("dependencies  别人使用你的包必须下载的依赖, 比如"),a("code",[v._v("yarn add jquery")])])]),v._v(" "),a("li",[a("p",[v._v("devDependencies 开发你的包需要依赖的包,  比如"),a("code",[v._v("yarn add webpack")]),v._v(" webpack-cli -D (-D 相当于 --save-dev)")])])]),v._v(" "),a("h2",{attrs:{id:"线程与进程的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程与进程的区别"}},[v._v("#")]),v._v(" 线程与进程的区别")]),v._v(" "),a("ul",[a("li",[v._v("一个程序至少有一个进程，一个进程至少有一个线程。")]),v._v(" "),a("li",[v._v("线程的划分尺度小于进程，使得多线程程序的并发性高。")]),v._v(" "),a("li",[v._v("另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。")])]),v._v(" "),a("p",[v._v("线程在执行过程中与进程还是有区别的。")]),v._v(" "),a("ul",[a("li",[v._v("每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。")]),v._v(" "),a("li",[v._v("从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。\n但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);