(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{529:function(t,v,_){"use strict";_.r(v);var e=_(34),r=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"http"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),_("h2",{attrs:{id:"http是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http是什么"}},[t._v("#")]),t._v(" HTTP是什么")]),t._v(" "),_("ul",[_("li",[t._v("HTTP 是基于 TCP/IP（传输控制协议/因特网互联协议，又名网络通讯协议，是 Internet 最基本的协议）的关于数据如何在万维网中如何通信的协议。")]),t._v(" "),_("li",[t._v("HTTP 的底层是 TCP/IP。")])]),t._v(" "),_("p",[t._v("所以 GET 和 POST 的底层也是 TCP/IP，也就是说，GET/POST 都是 TCP 链接。\nGET 和 POST 能做的事情是一样一样的。你要给 GET 加上 request body，给 POST 带上 url 参数，技术上是完全行的通的。")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("业界不成文的规定是，(大多数) 浏览器通常都会限制 url 长度在 2K 个字节，而(大多数)服务器最多处理 64K 大小的 url。超过的部分，恕不处理。")])]),t._v(" "),_("li",[_("p",[t._v("如果你用 GET 服务，在 request body 偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然 GET 可以带 request body，也不能保证一定能被接收到哦。")])]),t._v(" "),_("li",[_("p",[t._v("GET 和 POST 本质上就是 TCP 链接，并无差别。但是由于 HTTP 的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。")])]),t._v(" "),_("li",[_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6978733203062915103",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于三次握手和四次挥手，面试官想听到怎样的回答？"),_("OutboundLink")],1)])]),t._v(" "),_("li",[_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6844903625513238541",target:"_blank",rel:"noopener noreferrer"}},[t._v("跟着动画来学习TCP三次握手和四次挥手"),_("OutboundLink")],1)])])]),t._v(" "),_("h2",{attrs:{id:"http中get与post的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http中get与post的区别"}},[t._v("#")]),t._v(" HTTP中GET与POST的区别")]),t._v(" "),_("ul",[_("li",[t._v("GET 在浏览器回退时是无害的，而 POST 会再次提交请求。")]),t._v(" "),_("li",[t._v("GET 产生的 URL 地址可以被 Bookmark，而 POST 不可以。")]),t._v(" "),_("li",[t._v("GET 请求会被浏览器主动 cache，而 POST 不会，除非手动设置。")]),t._v(" "),_("li",[t._v("GET 请求只能进行 url 编码，而 POST 支持多种编码方式。")]),t._v(" "),_("li",[t._v("GET 请求参数会被完整保留在浏览器历史记录里，而 POST 中的参数不会被保留。")]),t._v(" "),_("li",[t._v("GET 请求在 URL 中传送的参数是有长度限制的，而 POST 么有。")]),t._v(" "),_("li",[t._v("对参数的数据类型，GET 只接受 ASCII 字符，而 POST 没有限制。")]),t._v(" "),_("li",[t._v("GET 比 POST 更不安全，因为参数直接暴露在 URL 上，所以不能用来传递敏感信息。")]),t._v(" "),_("li",[t._v("GET 参数通过 URL 传递，POST 放在 Request body 中。")])]),t._v(" "),_("p",[t._v("GET 和 POST 还有一个重大区别")]),t._v(" "),_("p",[t._v("简单的说：")]),t._v(" "),_("ul",[_("li",[t._v("GET 产生一个 TCP 数据包;")]),t._v(" "),_("li",[t._v("POST 产生两个 TCP 数据包。")])]),t._v(" "),_("p",[t._v("长的说：")]),t._v(" "),_("ul",[_("li",[t._v("对于 GET 方式的请求，浏览器会把 http header 和 data 一并发送出去，服务器响应 200 (返回数据);")]),t._v(" "),_("li",[t._v("而对于 POST，浏览器先发送 header，服务器响应 100 continue，浏览器再发送 data，服务器响应 200 ok(返回数据)。")])]),t._v(" "),_("p",[t._v("据研究，在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。\n而在网络环境差的情况下，两次包的 TCP 在验证数据包完整性上，有非常大的优点。\n并不是所有浏览器都会在 POST 中发送两次包，Firefox 就只发送一次。")]),t._v(" "),_("h2",{attrs:{id:"浏览器缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),_("p",[t._v("简单来说，浏览器缓存就是把一个已经请求过的Web资源（如html页面，图片，js，数据等）拷贝一份副本储存在浏览器中。")]),t._v(" "),_("p",[t._v("缓存会根据进来的请求保存输出内容的副本。当下一个请求来到的时候，如果是相同的URL，缓存会根据缓存机制决定是直接使用副本响应访问请求，还是向源服务器再次发送请求。")]),t._v(" "),_("p",[t._v("比较常见的就是浏览器会缓存访问过网站的网页，当再次访问这个URL地址的时候，如果网页没有更新，就不会再次下载网页，而是直接使用本地缓存的网页。只有当网站明确标识资源已经更新，浏览器才会再次下载网页。")]),t._v(" "),_("h2",{attrs:{id:"浏览器缓存实现原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存实现原理"}},[t._v("#")]),t._v(" 浏览器缓存实现原理")]),t._v(" "),_("p",[t._v("浏览器缓存将文件保存在客户端，好的缓存策略可以")]),t._v(" "),_("ul",[_("li",[t._v("减少对网络带宽的占用")]),t._v(" "),_("li",[t._v("降低服务器压力")]),t._v(" "),_("li",[t._v("减少网络延迟，提高访问速度，提高用户的体验，还可以减轻服务器的负担。")])]),t._v(" "),_("p",[t._v("当一个客户端请求 web 服务器, 请求的内容可以从以下几个地方获取：服务器、浏览器缓存中或缓存服务器中。这取决于服务器端输出的页面信息。页面文件有三种缓存状态。")]),t._v(" "),_("ol",[_("li",[t._v("最新的：选择不缓存页面，每次请求时都从服务器获取最新的内容。")]),t._v(" "),_("li",[t._v("未过期的：在给定的时间内缓存，如果用户刷新或页面过期则去服务器请求，否则将读取本地的缓存，这样可以提高浏览速度。")]),t._v(" "),_("li",[t._v("过期的：也就是陈旧的页面，当请求这个页面时，必须进行重新获取。")])]),t._v(" "),_("p",[t._v("页面的缓存状态是由 http header 决定的，一个浏览器请求信息，一个是服务器响应信息。")]),t._v(" "),_("p",[t._v("主要包括 Pragma: no-cache、Cache-Control、 Expires、 Last-Modified、If-Modified-Since。")]),t._v(" "),_("p",[t._v("其中 Pragma: no-cache 由 HTTP/1.0 规定，Cache-Control 由 HTTP/1.1 规定。")]),t._v(" "),_("p",[t._v("Cache-Control 的主要参数：")]),t._v(" "),_("ul",[_("li",[t._v("A、Cache-Control: private/public，Public 响应会被缓存，并且在多用户间共享。 Private 响应只能够作为私有的缓存，不能在用户间共享。")]),t._v(" "),_("li",[t._v("B、Cache-Control: no-cache，不进行缓存。")]),t._v(" "),_("li",[t._v("C、Cache-Control: max-age = x，缓存时间，以秒为单位。")]),t._v(" "),_("li",[t._v("D、Cache-Control: must-revalidate，如果页面是过期的，则去服务器进行获取。")])]),t._v(" "),_("p",[t._v("Expires：显示的设置页面过期时间。")]),t._v(" "),_("p",[t._v("Last-Modified：请求对象最后一次的修改时间，用来判断缓存是否过期，通常由文件的时间信息产生。")]),t._v(" "),_("p",[t._v("If-Modified-Since：客户端发送请求附带的信息，指浏览器缓存请求对象的最后修改日期，用来和服务器端的 Last-Modified 做比较。")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6844903747357769742",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文读懂前端缓存（好文）"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"http协议头字段说上来几个-是否尽可能详细的掌握http协议。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http协议头字段说上来几个-是否尽可能详细的掌握http协议。"}},[t._v("#")]),t._v(" HTTP协议头字段说上来几个，是否尽可能详细的掌握HTTP协议。")]),t._v(" "),_("h3",{attrs:{id:"http-协议头字段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-协议头字段"}},[t._v("#")]),t._v(" HTTP 协议头字段")]),t._v(" "),_("ul",[_("li",[t._v("HTTP 的头域包括 "),_("code",[t._v("通用头，请求头，响应头和实体头")]),t._v(" 四个部分。")]),t._v(" "),_("li",[t._v("每个头域由一个域名，冒号（:）和域值三部分组成。")]),t._v(" "),_("li",[t._v("域名是大小写无关的，域值前可以添加任何数量的空格符，头域可以被扩展为多行，在每行开始处，使用至少一个空格或制表符。")])]),t._v(" "),_("h3",{attrs:{id:"http-协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-协议"}},[t._v("#")]),t._v(" HTTP 协议")]),t._v(" "),_("ul",[_("li",[t._v("HTTP 是超文本传输协议的缩写，它用于传送 WWW 方式的数据。")]),t._v(" "),_("li",[t._v("HTTP 协议采用了请求/响应模型。")]),t._v(" "),_("li",[t._v("客户端向服务器发送一个请求，请求头包含请求的方法、URI、协议版本、以及包含请求修饰符、客户 信息和内容的类似于 MIME 的消息结构。")]),t._v(" "),_("li",[t._v("服务器以一个状态行作为响应，相应的内容包括消息协议的版本，成功或者错误编码加上包含服务器信息、实体元信息以及可能的实体内容。")])]),t._v(" "),_("h2",{attrs:{id:"一次完整的-http-事务是怎样的一个过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一次完整的-http-事务是怎样的一个过程"}},[t._v("#")]),t._v(" 一次完整的 HTTP 事务是怎样的一个过程")]),t._v(" "),_("ul",[_("li",[t._v("域名解析")]),t._v(" "),_("li",[t._v("发起 TCP 的 3 次握手")]),t._v(" "),_("li",[t._v("建立 TCP 连接后发起 http 请求")]),t._v(" "),_("li",[t._v("服务器响应 http 请求，浏览器得到 html 代码")]),t._v(" "),_("li",[t._v("浏览器解析 html 代码，并请求 html 代码中的资源（如 js、css、图片等）")]),t._v(" "),_("li",[t._v("浏览器对页面进行渲染呈现给用户\n"),_("RouterLink",{attrs:{to:"/blog/performance_optimization.html"}},[t._v("详细信息")])],1)]),t._v(" "),_("h2",{attrs:{id:"http状态码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http状态码"}},[t._v("#")]),t._v(" HTTP状态码")]),t._v(" "),_("ul",[_("li",[t._v("100 Continue 继续，一般在发送 post 请求时，已发送了 http header 之后服务端将返回此信息，表示确认，之后发送具体参数信息。")]),t._v(" "),_("li",[_("code",[t._v("200")]),t._v(" OK 正常返回信息 。")]),t._v(" "),_("li",[_("code",[t._v("201")]),t._v(" Created 请求成功并且服务器创建了新的资源 。")]),t._v(" "),_("li",[_("code",[t._v("202")]),t._v(" Accepted 服务器已接受请求，但尚未处理 。")]),t._v(" "),_("li",[_("code",[t._v("301")]),t._v(" Moved Permanently 请求的网页已永久移动到新位置。")]),t._v(" "),_("li",[_("code",[t._v("302")]),t._v(" Found 临时性重定向。")]),t._v(" "),_("li",[_("code",[t._v("303")]),t._v(" See Other 临时性重定向，且总是使用 GET 请求新的 URI。")]),t._v(" "),_("li",[_("code",[t._v("304")]),t._v(" Not Modified 自从上次请求后，请求的网页未修改过。")]),t._v(" "),_("li",[_("code",[t._v("400")]),t._v(" Bad Request 服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。")]),t._v(" "),_("li",[_("code",[t._v("401")]),t._v(" Unauthorized 请求未授权。")]),t._v(" "),_("li",[_("code",[t._v("403")]),t._v(" Forbidden 禁止访问。")]),t._v(" "),_("li",[_("code",[t._v("404")]),t._v(" Not Found 找不到如何与 URI 相匹配的资源。")]),t._v(" "),_("li",[_("code",[t._v("500")]),t._v(" Internal Server Error 最常见的服务器端错误。")]),t._v(" "),_("li",[_("code",[t._v("503")]),t._v(" Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。")])]),t._v(" "),_("p",[t._v("相关文章：")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://blog.csdn.net/lzj2504476514/article/details/81454754",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP 协议和 UDP 协议的特点和区别"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.cnblogs.com/NightTiger/p/11334314.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("(纯干货)HTTP／1.0／1.1／2.0的区别以及http和https的区别"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.cnblogs.com/colima/p/7295771.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http & https & http2.0"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=r.exports}}]);